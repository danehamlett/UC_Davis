Last login: Fri Dec 29 00:19:44 on ttys001
Danes-MacBook-Pro:~ danehamlett$ py.test --nbval /Users/danehamlett/Desktop/School/Machine_Learning/Machine_Learning_Pre_Assessment_Quiz.ipynb
============================= test session starts ==============================
platform darwin -- Python 3.6.2, pytest-3.3.1, py-1.5.2, pluggy-0.6.0
rootdir: /Users/danehamlett, inifile:
plugins: nbval-0.7
collected 6 items                                                              

Desktop/School/Machine_Learning/Machine_Learning_Pre_Assessment_Quiz.ipynb . [ 16%]
..FFF                                                                    [100%]

=================================== FAILURES ===================================
____________________________________ cell 3 ____________________________________
Notebook cell execution failed
Cell 3: Cell outputs differ

Input:
### 3.  A basic Data Visualization using Seaborn or Plotly library or Matplotlib
### Using matplotlib, show a basic visualization (scatter plot)

## X and Y values
x = df['Price']
y = df['Sales']

## Render the chart
plt.plot(x, y, '.')
plt.show()

Traceback: mismatch 'text/plain'
<<<<<<<<<<<< Reference output from ipynb file:
<matplotlib.figure.Figure at 0x115797ef0>
============ disagrees with newly computed (test) output:
<matplotlib.figure.Figure at 0x113a8e908>
>>>>>>>>>>>>
------------------------------ Captured log call -------------------------------
kernel.py                  144 DEBUG    Executing cell: "### 3.  A basic Data Visualization using"...
kernel.py                  131 DEBUG    Kernel message (shell):
{'buffers': [],
 'content': {'execution_count': 4,
             'payload': [],
             'status': 'ok',
             'user_expressions': {}},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 948960, tzinfo=tzutc()),
            'msg_id': '41ca0595-e722c81c28ca1245bd784e6a',
            'msg_type': 'execute_reply',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {'dependencies_met': True,
              'engine': 'e26a1eb4-3d01-4949-90dd-fb7028963376',
              'started': '2017-12-29T08:30:08.799531Z',
              'status': 'ok'},
 'msg_id': '41ca0595-e722c81c28ca1245bd784e6a',
 'msg_type': 'execute_reply',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 798475, tzinfo=tzutc()),
                   'msg_id': 'd8f60042-70450186281444b961f05be5',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'execution_state': 'busy'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 799340, tzinfo=tzutc()),
            'msg_id': 'c339453f-a0c876db549d2ee6dd18eb88',
            'msg_type': 'status',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': 'c339453f-a0c876db549d2ee6dd18eb88',
 'msg_type': 'status',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 798475, tzinfo=tzutc()),
                   'msg_id': 'd8f60042-70450186281444b961f05be5',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'code': '### 3.  A basic Data Visualization using Seaborn or '
                     'Plotly library or Matplotlib\n'
                     '### Using matplotlib, show a basic visualization '
                     '(scatter plot)\n'
                     '\n'
                     '## X and Y values\n'
                     "x = df['Price']\n"
                     "y = df['Sales']\n"
                     '\n'
                     '## Render the chart\n'
                     "plt.plot(x, y, '.')\n"
                     'plt.show()',
             'execution_count': 4},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 799571, tzinfo=tzutc()),
            'msg_id': '5d437d2f-dcaa2d935dfa9398db6163cd',
            'msg_type': 'execute_input',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '5d437d2f-dcaa2d935dfa9398db6163cd',
 'msg_type': 'execute_input',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 798475, tzinfo=tzutc()),
                   'msg_id': 'd8f60042-70450186281444b961f05be5',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'data': {'image/png': 'iVBORw0KGgoAAAANSUhEUgAAAXoAAAD8CAYAAAB5Pm/hAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\n'
                                   'AAALEgAACxIB0t1+/AAAEo9JREFUeJzt3X2QnWddxvHv1YSgItjYrJ1OoUmDLQIqgawYFZgCKqXj\n'
                                   'WHGY2lrlxdaAAoPCKC/OCKP/4EvFcagwpXQKTigwFKQ6Velgpb4QdVdqCAU0DV1IKc2SRmTAod3u\n'
                                   'zz/2WT0kZ7Nn95w9L0++n5mdPec+z9lzZWdz5cm9z7nvVBWSpPY6Y9QBJEkby6KXpJaz6CWp5Sx6\n'
                                   'SWo5i16SWs6il6SWs+glqeUseklqOYteklpu86gDAGzbtq127Ngx6hiSNFFmZ2e/UlVTqx03FkW/\n'
                                   'Y8cOZmZmRh1DkiZKkrlejnPqRpJazqKXpJaz6CWp5Sx6SWo5i16SWs6il6SWm/iin507zrW3H2J2\n'
                                   '7vioo0jSWBqL6+jXa3buOFdev58HFxbZsvkM9l29h93bt446liSNlYk+o99/+BgPLiyyWPDQwiL7\n'
                                   'Dx8bdSRJGjsTXfR7dp7Fls1nsCnwiM1nsGfnWaOOJEljZ6KnbnZv38q+q/ew//Ax9uw8y2kbSepi\n'
                                   'ooselsregpekla06dZPkhiRHkxzsGHt/kjubj3uS3NmM70jyPx2PvWMjw0uSVtfLGf2NwNuA9ywP\n'
                                   'VNXPLd9Ocg3w1Y7j766qXYMKKEnqz6pFX1V3JNnR7bEkAS4DnjPYWJKkQen3qptnAvdX1X92jJ2f\n'
                                   '5JNJPp7kmSs9McneJDNJZubn5/uMIUlaSb9FfwVwU8f9+4DzquqpwGuA9yZ5TLcnVtV1VTVdVdNT\n'
                                   'U6tukCJJWqd1F32SzcDPAu9fHquqb1bVseb2LHA3cGG/ISVJ69fPGf2PA5+tqiPLA0mmkmxqbu8E\n'
                                   'LgAO9xdRktSPXi6vvAn4BPCEJEeSXNU8dDnfOm0D8CzgQHO55QeBl1fVA4MMLElam16uurlihfGX\n'
                                   'dBm7Gbi5/1iSpEGZ6LVuJEmrs+glqeUseklqOYteklrOopeklmtd0buHrCR9q4lfj76Te8hK0sla\n'
                                   'dUbvHrKSdLJWFb17yErSyVo1deMespJ0slYVPbiHrCSdqFVTN5Kkk1n0ktRyFr0ktZxFL0ktZ9FL\n'
                                   'UstZ9JLUcha9JLWcRS9JLWfRS1LLrVr0SW5IcjTJwY6xNye5N8mdzcclHY+9IcmhJJ9L8ryNCi5J\n'
                                   '6k0vZ/Q3Ahd3GX9rVe1qPm4FSPIk4HLgyc1z/jTJpkGFlSSt3apFX1V3AA/0+PUuBd5XVd+sqs8D\n'
                                   'h4Cn95FPktSnfuboX5nkQDO1s7yK2LnAFzuOOdKMnSTJ3iQzSWbm5+f7iCFJOpX1Fv3bgccDu4D7\n'
                                   'gGvW+gWq6rqqmq6q6ampqXXGkCStZl1FX1X3V9XDVbUIvJP/n565F3hcx6GPbcYkSSOyrqJPck7H\n'
                                   '3RcAy1fk3AJcnuSRSc4HLgD+pb+IkqR+rLrxSJKbgIuAbUmOAG8CLkqyCyjgHuBlAFX16SQfAO4C\n'
                                   'FoBXVNXDGxNdktSLVNWoMzA9PV0zMzOjjiFJEyXJbFVNr3ac74yVpJaz6CWp5Sx6SWo5i16SWs6i\n'
                                   'l6SWs+glqeUseklqOYteklrOopeklrPoJanlLHpJajmLXpJazqKXpJaz6CWp5Sx6SWo5i16SWs6i\n'
                                   'l6SWs+j7MDt3nGtvP8Ts3PFRR5GkFa26Z6y6m507zpXX7+fBhUW2bD6DfVfvYff2raOOJUkn8Yx+\n'
                                   'nfYfPsaDC4ssFjy0sMj+w8dGHUmSulq16JPckORokoMdY3+Q5LNJDiT5cJIzm/EdSf4nyZ3Nxzs2\n'
                                   'Mvwo7dl5Fls2n8GmwCM2n8GenWeNOpIkddXL1M2NwNuA93SM3Qa8oaoWkvwe8Abgdc1jd1fVroGm\n'
                                   'HEO7t29l39V72H/4GHt2nuW0jaSxtWrRV9UdSXacMPbRjrv7gRcONtZk2L19qwUvaewNYo7+l4C/\n'
                                   '6rh/fpJPJvl4kmeu9KQke5PMJJmZn58fQAxJUjd9FX2S3wIWgH3N0H3AeVX1VOA1wHuTPKbbc6vq\n'
                                   'uqqarqrpqampfmJIkk5h3UWf5CXATwFXVlUBVNU3q+pYc3sWuBu4cAA5JUnrtK6iT3Ix8JvAT1fV\n'
                                   'NzrGp5Jsam7vBC4ADg8iqCRpfVb9ZWySm4CLgG1JjgBvYukqm0cCtyUB2F9VLweeBfxOkoeAReDl\n'
                                   'VfXABmWXJPWgl6turugy/K4Vjr0ZuLnfUPp/s3PHvYRTUl9cAmGMucyCpEFwCYQx5jILkgbBoh9j\n'
                                   'LrMgaRCcuhljLrMgaRAs+jHnMguS+uXUjSS1nEUvSS1n0UtSy1n0ktRyFr0ktZxFL0ktZ9FLUstZ\n'
                                   '9JLUchb9mJidO861tx9idu74qKNIahnfGTsGXKVS0kbyjH4MuEqlpI1k0Y8BV6mUtJGcuhkDrlIp\n'
                                   'aSNZ9GPCVSolbRSnbiSp5Xoq+iQ3JDma5GDH2HcnuS3JfzaftzbjSfInSQ4lOZDkaRsVXpK0ul7P\n'
                                   '6G8ELj5h7PXAx6rqAuBjzX2A5wMXNB97gbf3H1OStF49FX1V3QE8cMLwpcC7m9vvBn6mY/w9tWQ/\n'
                                   'cGaScwYRVpK0dv3M0Z9dVfc1t78MnN3cPhf4YsdxR5qxb5Fkb5KZJDPz8/N9xJAkncpAfhlbVQXU\n'
                                   'Gp9zXVVNV9X01NTUIGJIkrrop+jvX56SaT4fbcbvBR7XcdxjmzFJ0gj0U/S3AC9ubr8Y+EjH+Iua\n'
                                   'q2/2AF/tmOKRJA1ZT2+YSnITcBGwLckR4E3AW4APJLkKmAMuaw6/FbgEOAR8A3jpgDNLktagp6Kv\n'
                                   'qitWeOi5XY4t4BX9hJIkDY7vjJWklrPoJanlLHpJajmLfoKstN2g2xBKOhWXKZ4QK2036DaEklbj\n'
                                   'Gf2EWGm7QbchlLQai35CrLTdoNsQSlpNli57H63p6emamZkZdYyxNzt3vOt2gyuNS2q3JLNVNb3a\n'
                                   'cc7RT5CVtht0G0JJp+LUjSS1nEUvSS1n0UtSy1n0ktRyFr0ktZxFL0ktZ9FLUstZ9JLUcha9JLWc\n'
                                   'RS9JLWfRS1LLrXutmyRPAN7fMbQT+G3gTOCXgflm/I1Vdeu6E0qS+rLuoq+qzwG7AJJsAu4FPgy8\n'
                                   'FHhrVf3hQBJKkvoyqKmb5wJ3V9XcgL6eJGlABlX0lwM3ddx/ZZIDSW5I0nX93CR7k8wkmZmfn+92\n'
                                   'iFrA/Wyl0et745EkW4AvAU+uqvuTnA18BSjgd4FzquqXTvU13HiknQaxn62bqkgrG+bGI88H/q2q\n'
                                   '7gdY/tyEeCfwlwN4DU2gbvvZrqWs3fhcGoxBTN1cQce0TZJzOh57AXBwAK+hCdTvfrZufC4NRl9n\n'
                                   '9EkeBfwE8LKO4d9PsoulqZt7TnhMp5Hd27ey7+o96556Wf6H4qGFRTc+l/rg5uAaa87RSytzc3C1\n'
                                   'ghufS/1zCQRJajmLXpJazqKXpJaz6CWp5Sx6SWo5i16SWs6il6SWs+glqeUseklqOYteklrOopek\n'
                                   'lrPoJanlLHpJajmLXpJazqKXpJaz6DVRZueOc+3th5idOz7qKNLEcOMRTQw3C5fWxzN6TQw3C5fW\n'
                                   'x6LXxFjeLHxTcLNwaQ36nrpJcg/wNeBhYKGqppN8N/B+YAdwD3BZVTmpqr7s3r6VfVfvcbNwaY0G\n'
                                   'NUf/7Kr6Ssf91wMfq6q3JHl9c/91A3otncbcLFxau42aurkUeHdz+93Az2zQ60iSVjGIoi/go0lm\n'
                                   'k+xtxs6uqvua218Gzh7A60iS1mEQUzfPqKp7k3wPcFuSz3Y+WFWVpE58UvOPwl6A8847bwAxJEnd\n'
                                   '9H1GX1X3Np+PAh8Gng7cn+QcgObz0S7Pu66qpqtqempqqt8Y0sj5Zi6Nq76KPsmjkjx6+Tbwk8BB\n'
                                   '4Bbgxc1hLwY+0s/rSONu+c1c13z0c1x5/X7LXmOl36mbs4EPJ1n+Wu+tqr9O8q/AB5JcBcwBl/X5\n'
                                   'OtJY6/ZmLq8O0rjoq+ir6jDwlC7jx4Dn9vO1pUmy/GauhxYWfTOXxo5r3UgD4Ju5NM4semlAfDOX\n'
                                   'xpVr3UhSy1n0ktRyFr0ktZxFL0ktZ9FLUstZ9JLUcha9JLWcRS9JLWfRS1LLWfTSCAxjSWOXTdYy\n'
                                   'l0CQhmx5SeMHFxbZsvkM9l29p6+lE2bnjp+0xs6gX0OTzaKXhmyQSxqvVOgum6xOTt1IQ7a8pPGm\n'
                                   '0PeSxt0KfdCvocnnGb00ZINc0nildfBdNlmdUnXSvt1DNz09XTMzM6OOIU2kbnP0Oj0kma2q6dWO\n'
                                   '84xemnCug6/VOEcvSS1n0UtSy6276JM8LsntSe5K8ukkr27G35zk3iR3Nh+XDC6uJGmt+pmjXwBe\n'
                                   'W1X/luTRwGyS25rH3lpVf9h/PElSv9Zd9FV1H3Bfc/trST4DnDuoYJKkwRjIHH2SHcBTgX9uhl6Z\n'
                                   '5ECSG5J4OYAkjVDfRZ/kO4GbgV+rqv8G3g48HtjF0hn/NSs8b2+SmSQz8/Pz/caQJK2gr6JP8giW\n'
                                   'Sn5fVX0IoKrur6qHq2oReCfw9G7Prarrqmq6qqanpqb6iSGpBVxtc+Ose44+SYB3AZ+pqj/qGD+n\n'
                                   'mb8HeAFwsL+IktrO1TY3Vj9X3fwY8IvAp5Lc2Yy9EbgiyS6ggHuAl/WVUFLrrXW1TZd9WJt+rrr5\n'
                                   'ByBdHrp1/XEknY5WWpytG8/+1861biSN3FpW23St/bWz6CWNhV4XZ1vL2b+WWPSSJopr7a+dRS9p\n'
                                   '4rg089q4eqUkddGm6/o9o5ekE7Ttyh7P6CXpBCttuj6pLHpJp70Tp2mWr+zZFNZ8Zc84Tvk4dSPp\n'
                                   'tLbSNM16ruwZ1ykfz+glndZWmqbZvX0rr3j2966pqNc65TOss3/P6CWd1gb5BqxxXcrBopd0Whvk\n'
                                   'G7DGdSkHi17SaW+Qb8Aax6UcLHpJGoFhLuVg0UvSiAxrKQevupGklrPoJanlLHpJajmLXpJazqKX\n'
                                   'pJaz6CWp5VJVo85AknlgbtQ5utgGfGXUIdZhEnNPYmaYzNxmHp6Nzr29qqZWO2gsin5cJZmpqulR\n'
                                   '51irScw9iZlhMnObeXjGJbdTN5LUcha9JLWcRX9q1406wDpNYu5JzAyTmdvMwzMWuZ2jl6SW84xe\n'
                                   'klrOogeSXJzkc0kOJXn9CsdcluSuJJ9O8t5hZ+yS55SZk5yX5PYkn0xyIMklo8h5QqYbkhxNcnCF\n'
                                   'x5PkT5o/04EkTxt2xm56yH1lk/dTSf4pyVOGnbFLplNm7jjuh5IsJHnhsLKdSi+5k1yU5M7m7+LH\n'
                                   'h5lvhTyr/Xx8V5K/SPLvTeaXDjsjVXVafwCbgLuBncAW4N+BJ51wzAXAJ4Gtzf3vmYDM1wG/0tx+\n'
                                   'EnDPGHyvnwU8DTi4wuOXAH8FBNgD/POoM/eY+0c7fjaePw65V8vc8XP0t8CtwAtHnbnH7/WZwF3A\n'
                                   'ec39kf5d7DHzG4Hfa25PAQ8AW4aZ0TN6eDpwqKoOV9WDwPuAS0845peBa6vqOEBVHR1yxhP1krmA\n'
                                   'xzS3vwv40hDzdVVVd7D0Q76SS4H31JL9wJlJzhlOupWtlruq/mn5ZwPYDzx2KMFOoYfvNcCrgJuB\n'
                                   'Uf88/58ecv888KGq+kJz/Miz95C5gEcnCfCdzbELw8i2zKKHc4Evdtw/0ox1uhC4MMk/Jtmf5OKh\n'
                                   'peuul8xvBn4hyRGWztheNZxofenlzzXurmLpfyVjLcm5wAuAt486yxpdCGxN8ndJZpO8aNSBevA2\n'
                                   '4IksnWx9Cnh1VS0OM4A7TPVmM0vTNxexdLZ2R5IfqKr/GmmqU7sCuLGqrknyI8CfJfn+Yf+AnU6S\n'
                                   'PJulon/GqLP04I+B11XV4tKJ5sTYDOwGngt8O/CJJPur6j9GG+uUngfcCTwHeDxwW5K/r6r/HlYA\n'
                                   'ix7uBR7Xcf+xzVinIyzNuz4EfD7Jf7BU/P86nIgn6SXzVcDFAFX1iSTfxtK6GyP/r+4p9PLnGktJ\n'
                                   'fhC4Hnh+VR0bdZ4eTAPva0p+G3BJkoWq+vPRxlrVEeBYVX0d+HqSO4CnAONc9C8F3lJLk/SHknwe\n'
                                   '+D7gX4YVwKmbpbK+IMn5SbYAlwO3nHDMn7N0Nk+SbSz99/HwMEOeoJfMX2DprIckTwS+DZgfasq1\n'
                                   'uwV4UXP1zR7gq1V136hDrSbJecCHgF8c8zPL/1NV51fVjqraAXwQ+NUJKHmAjwDPSLI5yXcAPwx8\n'
                                   'ZsSZVtP5d/Fs4AkMuT9O+zP6qlpI8krgb1i6CuGGqvp0kt8BZqrqluaxn0xyF/Aw8BujPGvrMfNr\n'
                                   'gXcm+XWWfhn0kuaMYmSS3MTSP5jbmt8dvAl4BEBVvYOl3yVcAhwCvsHSmdDI9ZD7t4GzgD9tzpAX\n'
                                   'asQLWfWQeSytlruqPpPkr4EDwCJwfVWd8hLSjdbD9/p3gRuTfIqlK8peV1VDXYnTd8ZKUss5dSNJ\n'
                                   'LWfRS1LLWfSS1HIWvSS1nEUvSS1n0UtSy1n0ktRyFr0ktdz/AigjC3fQHQ0YAAAAAElFTkSuQmCC\n',
                      'text/plain': '<matplotlib.figure.Figure at '
                                    '0x113a8e908>'},
             'metadata': {},
             'transient': {}},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 946474, tzinfo=tzutc()),
            'msg_id': '159cd3a6-f1c38538c5b72cc27a742c56',
            'msg_type': 'display_data',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '159cd3a6-f1c38538c5b72cc27a742c56',
 'msg_type': 'display_data',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 798475, tzinfo=tzutc()),
                   'msg_id': 'd8f60042-70450186281444b961f05be5',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'execution_state': 'idle'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 949957, tzinfo=tzutc()),
            'msg_id': '0eeb1306-0c28ca5a37fddf93f6b05ad3',
            'msg_type': 'status',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '0eeb1306-0c28ca5a37fddf93f6b05ad3',
 'msg_type': 'status',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 798475, tzinfo=tzutc()),
                   'msg_id': 'd8f60042-70450186281444b961f05be5',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
____________________________________ cell 4 ____________________________________
Notebook cell execution failed
Cell 4: Cell outputs differ

Input:
### 4.  Some type of Machine Learning technique on the data - Linear Regression
## X and Transformed Y values
x = df['Price']
y_log = df['Log_Sales']

## Render the chart
plt.plot(x, y_log, '.')

## Create a scatter plot with a linear regression trend line
m, b = np.polyfit(x, y_log, 1)
plt.plot(x, m*x + b, '-')
plt.show()

Traceback: mismatch 'text/plain'
<<<<<<<<<<<< Reference output from ipynb file:
<matplotlib.figure.Figure at 0x115811ac8>
============ disagrees with newly computed (test) output:
<matplotlib.figure.Figure at 0x113abe908>
>>>>>>>>>>>>
------------------------------ Captured log call -------------------------------
kernel.py                  144 DEBUG    Executing cell: "### 4.  Some type of Machine Learning te"...
kernel.py                  131 DEBUG    Kernel message (shell):
{'buffers': [],
 'content': {'execution_count': 5,
             'payload': [],
             'status': 'ok',
             'user_expressions': {}},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 108521, tzinfo=tzutc()),
            'msg_id': 'eb9706dd-5441c5c79620f7a2b4f558d0',
            'msg_type': 'execute_reply',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {'dependencies_met': True,
              'engine': 'e26a1eb4-3d01-4949-90dd-fb7028963376',
              'started': '2017-12-29T08:30:08.957285Z',
              'status': 'ok'},
 'msg_id': 'eb9706dd-5441c5c79620f7a2b4f558d0',
 'msg_type': 'execute_reply',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 956349, tzinfo=tzutc()),
                   'msg_id': '34283ab6-74981fba280d383bc55a6c55',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'execution_state': 'busy'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 957119, tzinfo=tzutc()),
            'msg_id': '34a128c0-23e18dbd11c7cab215500739',
            'msg_type': 'status',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '34a128c0-23e18dbd11c7cab215500739',
 'msg_type': 'status',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 956349, tzinfo=tzutc()),
                   'msg_id': '34283ab6-74981fba280d383bc55a6c55',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'code': '### 4.  Some type of Machine Learning technique on the '
                     'data - Linear Regression\n'
                     '## X and Transformed Y values\n'
                     "x = df['Price']\n"
                     "y_log = df['Log_Sales']\n"
                     '\n'
                     '## Render the chart\n'
                     "plt.plot(x, y_log, '.')\n"
                     '\n'
                     '## Create a scatter plot with a linear regression trend '
                     'line\n'
                     'm, b = np.polyfit(x, y_log, 1)\n'
                     "plt.plot(x, m*x + b, '-')\n"
                     'plt.show()',
             'execution_count': 5},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 957321, tzinfo=tzutc()),
            'msg_id': '6562b6ca-a8b1a8d6f6c9fcee30f55597',
            'msg_type': 'execute_input',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '6562b6ca-a8b1a8d6f6c9fcee30f55597',
 'msg_type': 'execute_input',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 956349, tzinfo=tzutc()),
                   'msg_id': '34283ab6-74981fba280d383bc55a6c55',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'data': {'image/png': 'iVBORw0KGgoAAAANSUhEUgAAAXcAAAD8CAYAAACMwORRAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\n'
                                   'AAALEgAACxIB0t1+/AAAHERJREFUeJzt3XuY1WW5//H3DQM7SxwQRjeiMI4HPJ+GdDR3yrZfKu12\n'
                                   'mebeSVoooqaGikal5ZBlWmrqFi1E9KoQ65dkhmeNLRVOOqPIUQ0HRlG3jDiMOy1gnHv/8V2LNYd1\n'
                                   'mpnvWt91+Lyui0u+z3pmrVuu4Z6H534O5u6IiEhpGRR1ACIiEj4ldxGREqTkLiJSgpTcRURKkJK7\n'
                                   'iEgJUnIXESlBSu4iIiVIyV1EpAQpuYuIlKCKqD541KhRXl1dHdXHi4gUpaampnfcvSpTv8iSe3V1\n'
                                   'NY2NjVF9vIhIUTKzlmz6aVpGRKQEKbmLiJQgJXcRkRKk5C4iUoKU3EVESpCSu4hICSq65N7U0sbs\n'
                                   'xWtpammLOhQRkYIV2Tr3/mhqaWPy3Aa2dnQytGIQ86fWUTtuRNRhiYgUnKIauTc0bwoSu29hW0cn\n'
                                   'Dc2bog5JRKQgFVVyr6sZybEVa/jTP03nlCFLqdtz56hDEhEpSEWV3GvHjWDmFz7BhzvtwQ2DbqN2\n'
                                   'yRTY9GrUYYmIFJyiSu4ABx5+NLte+keYdANsaILbj4YlP4aOrVGHJiJSMIouuQMwaDAceS5c9ByM\n'
                                   'Pwn+8H34fhXMPz3qyERECkJxJve4nUbD6T9n8x4nBM9/fQzqK+GN56ONS0QkYhmTu5ntYWaLzWy1\n'
                                   'ma0ys+lJ+kw2s+VmtsLMlprZobkJt7emljbq1p/LJ7fcnGi8c2KQ5N3zFYaISEHJZuTeAcxw9wOA\n'
                                   'OuBCMzugR591wHHufjBwDTAn3DBTiy+PfM13Ya8t97JszBmJF2cNh+fm5isUEZGCkTG5u/tb7v58\n'
                                   '7Pf/C6wBxvTos9Td41tGG4Ddww40lbqakQytGMRggyEVg/jw09fCVRsTHR6aEYzi/64drSJSPsz7\n'
                                   'MHVhZtXAEuAgd38vRZ/Lgf3cfWq695owYYKHdRNTU0sbDc2bqKsZ2X3H6ksPwX1dRvL7ngxn3BfK\n'
                                   'Z4qIRMHMmtx9QsZ+2SZ3M9sReBr4gbsvTNFnInA7cKy799o+ambTgGkAY8eOrW1pyeq2qIG76QB4\n'
                                   '743E87mLYcwR+flsEZEQhZrczWwIsAh4zN1vStHnEOC3wMnu/kqm9wxz5J6Vd9fBrYd1b7t6M5jl\n'
                                   'LwYRkQHKNrlns1rGgLuANWkS+1hgIXBmNok9EjvvCfXtUPe1RJsKriJSojKO3M3sWOCPwAqgM9b8\n'
                                   'bWAsgLv/1MzmAqcC8XmWjkw/WfI+cu9q2z/gB7t2b5u5HnbQCZMiUthCn3MPW6TJPa5nwXX8JPjS\n'
                                   'gujiERHJILRpmZK232eCqZphuwXPLz8cLJt884Vo4xIRGaDyTu5xM9bA15clnuccrx2uIlLUlNzj\n'
                                   '4gXXoy5ItM0aDs/dFV1MIiL9pOTe08nXwZVvJ54fuiy2w3VzdDGJiPSRknsyQz4SjOL/Y36i7fpx\n'
                                   'sOCM1F8jIlJAlNzT2f/fYgXX0cHzyw/FCq7L0n+diEjElNyzMeOlHgXX41RwFZGCpuSerVjB9e39\n'
                                   'v5pomzUcGudFFpKISCpK7n3Q1NLGcStPYr8t9yQaF12qgquIFBwl9z6IXwzyDx/KXlvu5eEDf5x4\n'
                                   '8fpxcN/k6IITEelCyb0Pel4MsuuRXwwKrjvGzql5aVEwin/rxWgDFZGyV95ny/RDyotB3m2GWw/v\n'
                                   '3llHCotIyHS2TI7UjhvBhRP37p7YAXauCUbxR56XaJs1HBrvzm+AIiIouYdv0o+673BddEmfC65N\n'
                                   'LW3MXryWphbd+yoi/aPkngvbd7j+MtF2/Tj41ZczfmlTSxuT5zZw4+MvM3lugxK8iPSLknsu7f/Z\n'
                                   'IMl/bJfgec3vMxZc4ytyOh22dXTS0NzrKloRkYyU3PPhir/C17ucEf+zT6bc4dpzRU5dzcg8Bioi\n'
                                   'pUKrZfLt4Svg2TmJ5wO/AF/sXnRNuSJHRMqertkrZMnucJ3xMgz752jiEZGioaWQhSxecP3E9ETb\n'
                                   'jeODqRoRkRAouUekqaWN2RVn0TRlffcX6ithzaJIYhKR0lERdQDlKL7ccWtHJ0MrBjF/6npq7WWY\n'
                                   'd2LQ4VexM2q0w1VE+kkj9wgkXe44ti6YqqnYIdFx1nB4clZ0gYpI0cqY3M1sDzNbbGarzWyVmU1P\n'
                                   '0sfM7FYzW2tmy83siNyEWxrSLne86n/gm68nnv90UzBV074h/4GKSNHKuFrGzEYDo939eTMbBjQB\n'
                                   'n3f31V36TAIuBiYBRwG3uPtR6d63rFfLkOVyx6X/BY9f1b2tvj33wYlIwQpttYy7v+Xuz8d+/7/A\n'
                                   'GmBMj26fA37ugQZgeOyHgqSQ8gCyro65uHcyr6+EZffmNjgRKXp9mnM3s2rgcOAvPV4aA3SZS2AD\n'
                                   'vX8ASH/Vt8Pk+xPPD1ygO1xFJK2sk7uZ7QjcD1zi7u/158PMbJqZNZpZY2tra3/eonzt86neo/hZ\n'
                                   'w7U2XkSSyiq5m9kQgsQ+390XJunyBrBHl+fdY23duPscd5/g7hOqqqr6E6/Ut8PM9T3aKuGdtZGE\n'
                                   'IyKFKZvVMgbcBaxx95tSdHsQOCu2aqYOaHf3t0KMU7raYUSQ5EdUJ9puq9UoXkS2y2bk/gngTOBf\n'
                                   'zWxZ7NckMzvfzM6P9XkYaAbWAncCX8tNuNLN9BeTF1yf/lE08YhIwdDBYaXihfnwux4/U7XDVaTk\n'
                                   '6OCwEpDuur1erx0+WQVXEdlOZ8sUqN7nz9RtXxOf7jXq2+FvG+GGfRJvVl8JFz8PI/eK4P9ERKKg\n'
                                   'kXuBSnfdXsar+HbcJUjyw8cm2v7rCI3iRcqIknuBSnf+TNZX8V2yInnBdcmPcxi5iBQCFVQLWLrz\n'
                                   'Z/p8Fd/zv4AHL+repoKrSNHRNXuSXLKpGR1GJlI0tFpGkqtvhxmv9GirhE2vRhOPiOSEkns5GrZr\n'
                                   'kOQru5wYoYKrSElRci9nl65MXnD9443RxCMioVFylyDBf/bWxPNT39ORwiJFTsldArVf0Q5XkRKi\n'
                                   '5C7d1bfDjJd7tFXCu83RxCMi/aLkLr0N++cgye/U5TKtWw/XKF6kiCi5S2qXrU5RcE11rL+IFAol\n'
                                   'd8msvh0+e0vi+alZaQuu6U6zFJH80A5V6ZsMO1zTnliZpT4frSBSRrRDVXIjZcF1HZDFiZUZxH84\n'
                                   '3Pj4y0ye26DRv0g/KblL38ULrsN2S7TdehjUV2Z/YmUKA/3hICIBXdYh/TdjTfDfLlM1tXdX8+SR\n'
                                   'M/ndjqf3a1ol/sNhW0dnv344iEhAc+4Sjsa7YdEl3dv6eaSw5txFUtORvxKNXgVXg/rNkYQiUopU\n'
                                   'UJVo1LfDZS91afBuBVcRyQ8ldwnfTqODJP+xXRJtsYKriOSHkrvkzhV/Tb7D9U83RxOPSBnJmNzN\n'
                                   'bJ6ZbTSzlSlerzSz35vZi2a2ysymhB+mFLX6dvhMlyMLnrxaRwqL5Fg2I/d7gJPSvH4hsNrdDwWO\n'
                                   'B240s6EDD01KysfPSX6k8Kydo4lHpMRlTO7uvgR4N10XYJiZGbBjrG9HOOFJyalvh8vWJJ79w2AU\n'
                                   '37Y+spBESlEYc+63AfsDbwIrgOnu3hnC+0qp2mm3WMG1KtF2y6EquIqEKIzkfiKwDNgNOAy4zcx2\n'
                                   'StbRzKaZWaOZNba2tobw0VLUrlgbbHTqqr4S/nxr8v4ikrUwkvsUYKEH1gLrgP2SdXT3Oe4+wd0n\n'
                                   'VFVVJesi5casd8H1ie+o4CoyQGEk99eAEwDMbFdgPKA72aRvUhVcNVUj0i/ZLIVcADwDjDezDWZ2\n'
                                   'jpmdb2bnx7pcAxxjZiuAp4CZ7v5O7kKWklbfDl9f1qOtElpfiSYekSKls2WkcGW4GESkHOlsGSl+\n'
                                   '9e3JC65Lb4smHpEiouQuhS1ecJ10Q6Lt8StVcBXJQMldCl5TSxuz359I05T13V+YNRy+v2skMYkU\n'
                                   'Ot3EJAWt94Xb66kd/gH85ICgQ8c/glH89OUwYly0wYoUEI3cpaAlvVO1ckwwVbNDl1uabjlEyyZF\n'
                                   'ulByl4KW9sLtmeuTF1yfmZ3XGEUKkZZCSsHL6k7VZ++Ehy/v3tbPO1xFCpnuUJXy1HNqpmIHuOp/\n'
                                   'oolFJAe0zl3KU307XLo68dzx9yDhb34tuphEIqDkLqUnXnD9py6j+JsPVsFVyoqSu5Sub72WouB6\n'
                                   'ezTxiOSRkruUtvgO15N/lGh77Fva4SolT8ldysNR5yU/UvgHu0UTj0iOKblLealvh0tWJp63vR8r\n'
                                   'uL7er7dramlj9uK1NLW0hRSgSDh0/ICUn+F7BEn+h3vAlveCtpsPCv7bhyOFex+NUJd6Hb5Inmnk\n'
                                   'LuXrW68nL7g23JHVlyc9GkGkQCi5S3mLF1xPuj7R9ug3syq4pj0aQSRi2qEq0lXPtfBDh8G3N6Ts\n'
                                   'ntXRCCIh0vEDIv21+fXEHHzcpaugcvdo4hHpQscPiPRXvOA6dFii7ScHaoerFBUld5FUvr0hecH1\n'
                                   'Lz+LJh6RPlByF0lne8H1ukTbI9/QDlcpeEruItmouyD5Dtcfjo0mHpEMMiZ3M5tnZhvNbGWaPseb\n'
                                   '2TIzW2VmT4cbokgBqW+HS1Yknre0B6P49tQrakSikM3I/R7gpFQvmtlw4Hbg3939QOCL4YQmUqCG\n'
                                   'jw2S/JCPJdpUcJUCkzG5u/sS4N00Xc4AFrr7a7H+G0OKTaSwXflmioLrnGjiEekijDn3fYERZvbf\n'
                                   'ZtZkZmeF8J4ixSFecD3x2kTbI1eo4CqRCyO5VwC1wGeAE4HvmNm+yTqa2TQzazSzxtbW1hA+WqRA\n'
                                   'HH1h8oLrdeOiiUfKXhjJfQPwmLu/7+7vAEuAQ5N1dPc57j7B3SdUVVWF8NEiBaZnwfUfm1VwlUiE\n'
                                   'kdx/BxxrZhVm9lHgKGBNCO8rUpziBdeKjyTaVHCVPMtmKeQC4BlgvJltMLNzzOx8MzsfwN3XAI8C\n'
                                   'y4FngbnunnLZpEjZuOrt5AXXZ++MJh4pKzo4TCQflt4Gj1/Zve3qzUFBVqQPdHCYSCE55qLkBdfr\n'
                                   '94wmHil5Su4i+VTfDtOXJ57//m4wVfPem9HFJCVJyV0k30aMC5L84KGJtpv2V8FVQqXkLhKV77Qm\n'
                                   'L7g+NzeaeKSkKLmL5ElTSxuzF6+lqaUt0Rjf4fr/rkm0PTSj3ztck36GlCWtlhHJg6aWNibPbWBr\n'
                                   'RydDKwYxf2pd8jtXe07NfHQUfOPVcD9DippWy4gUkIbmTWzt6KTTYVtHJw3Nm5J3rG+H6S8mnj94\n'
                                   'p1fBNdXoPOvPkLJQEXUAIuWgrmYkQysGsa2jkyEVg6irGZm684jqIMl/byR0dgRtN+0PQNOU9SlH\n'
                                   '5336DCl5mpYRyZOmljYamjdRVzMy++kS92A9fBdXbjuH+R+ewGCDyz49ngsn7j2wz5Ciku20jJK7\n'
                                   'SDH48y3wxHe7Ne334QLmTz1aSbzMaM5dpJR8YnqvHa4vDf4Stc9cFFFAUuiU3EWKSc+C60uLgoLr\n'
                                   '+yqeSndK7iLFJl5wrf6XRNuPa7TDVbpRchcpVl9dlHyH60sPRxOPFBQld5FiFt/heupdibb7vqRR\n'
                                   'vCi5i5SEg0/rfaRwfSX86svRxCORU3IXKSX17XDZS4nnNb8PkvwH70YXk0RCyV2k1Ow0Okjy445N\n'
                                   'tP1oT03VlBkld5FSNeWh5AXXlx+NJh7JKyV3kVIWL7h+ocsZ8Qv+Q6P4MqDkLlIODvliioLrmdHE\n'
                                   'Izmn5C5STnoVXB9UwbVEKbmLlJt4wXXsMYk2FVxLjpK7SLk6+xEVXEtYxuRuZvPMbKOZrczQ7+Nm\n'
                                   '1mFmp4UXnojk1PaC652JNhVcS0I2I/d7gJPSdTCzwcD1wOMhxCQi+XbI6ckLrr/+SjTxyIBlTO7u\n'
                                   'vgTIVG25GLgf2BhGUCISkfp2uGxN4nn1Ayq4FqkBz7mb2RjgFOCOgYcjIpHbabdYwfXoRJsKrkUn\n'
                                   'jILqzcBMd+/M1NHMpplZo5k1tra2hvDRIpIzZz+avOD6ymPRxCN9ktUdqmZWDSxy94OSvLYOsNjj\n'
                                   'KOADYJq7P5DuPXWHqkgRefE++O153dt6ztFLXuTtDlV339Pdq929GvgN8LVMiV1Eisyh/5m84Pr/\n'
                                   'p0QTj2SUzVLIBcAzwHgz22Bm55jZ+WZ2fu7DE5GCUt8Ol65OPK9aqIJrgcpqWiYXNC0jUuTuOhFe\n'
                                   'b+jepqmanMvbtIyIlKlzHktecP3rE9HEI90ouYtI/8V3uJ7ys0Tb/NO0bLIAKLmLyMClKrj+5uyU\n'
                                   'X9LU0sbsxWtpamnLcXDlqSLqAESkhNS3Q/sb8JMDgueV9we/vrEOPrrz9m5NLW1MntvA1o5OhlYM\n'
                                   'Yv7UOmrHjYgo6NKkkbuIhKtyTJDkd/94oq3HDteG5k1s7eik02FbRycNzZsiCLS0KbmLSG5MfTJl\n'
                                   'wbWuZiRDKwYx2GBIxSDqakZGE2MJ07SMiOROvOC67F544IKgbf5p1ALzp66noXkTdTUjNSWTAxq5\n'
                                   'i0juHXZGr4Jr7d3VXLjph0rsOaLkLiL5U98Ol65KPK/8TTBV83etmAmbkruI5Ffl7kGSH9Nlk+X1\n'
                                   '1RnXxmvpZN9ozl1EonHuU+AOs4Yn2uorYfL9sM+nunXV0sm+08hdRKITL7h+7vZE2/xTe43itXSy\n'
                                   '75TcRSR6h09OvsP1/qkAWjrZDzoVUkQKy+bX4eYe9wLNXE/TRrR0kuxPhVRyF5HCNGcivPl89zYd\n'
                                   'Kawjf0WkyE1bDN/tsTKmvhLWPhlNPEVGyV1ECtegQbGC6+xE2y97F1ylNyV3ESl8h385RcH13Gji\n'
                                   'KQJK7iJSPOrb4ZIViecVv47tcN2c+mvKlJK7iBSX4WODJD/6sETb9eM0VdODkruIFKfznk5RcH0q\n'
                                   'mngKjJK7iBSveMH1329LtP3yCxrFo+QuIqXgiDOTF1wXnhdNPAUgY3I3s3lmttHMVqZ4fbKZLTez\n'
                                   'FWa21MwODT9MEZEs9Cy4Lr+vbAuu2Yzc7wFOSvP6OuA4dz8YuAaYE0JcIiL9s73g2mWcWYYF14zJ\n'
                                   '3d2XAO+meX2pu8erGg3A7iHFJiLSf+ctSV5wffUP0cSTZ2HPuZ8DPBLye4qI9E+84PrZWxNtvzil\n'
                                   'LEbxoSV3M5tIkNxnpukzzcwazayxtbU1rI8WEUmv9ivJC66/PT+aePIglORuZocAc4HPuXvKU/Td\n'
                                   'fY67T3D3CVVVVWF8tIhI9urbYfryxPOLC4Ikv/X96GLKkQEndzMbCywEznT3VwYekohIDo0Y1/sO\n'
                                   '12t3g7snldQ9rRnPczezBcDxwCjgbeBqYAiAu//UzOYCpwItsS/pyOasYZ3nLiKR63mHKzBp63U0\n'
                                   'D64u2HtadVmHiEi2Xl0Mv/h8t6bZxzVx4cS9IwooNV3WISKSrb0m0jRlPW0+bHvThU/XwrN3RhjU\n'
                                   'wCi5i4gAteNG0Hz2CuYd/USi8eHLYwXXD6ILrJ+U3EVEYmrHjeDsE48MCq7HXJx44drRcPdnogus\n'
                                   'H5TcRUSS+fT3u+9wbflTMIp/e1V0MfWBkruISCrxHa5nPpBou+OYotjhquQuIpLJXhODJL9Dl6WR\n'
                                   '9ZUFXXBVchcRydbM9XD52sRzARdcldxFpCz1ezfqjlXBKP7oixJt146m5fHbww1wgLSJSUTKTlNL\n'
                                   'G5PnNrC1o5OhFYP6vRu1af0mau+p6d54+drgB0COaBOTiEgKDc2b2NrRSafDto5OGppTnneY/n3W\n'
                                   'tVGz5V4+ueUnicYb9oZFl4YUaf8puYtI2amrGcnQikEMNhhSMYi6mpEDep832JX9PryPDbXfCF5o\n'
                                   'nBfMxb/xfIhR942mZUSkLDW1tNHQvIm6mpEDOiCs1/ts+RvcsC9six0jPGo8XPBnGDwklLh1cJiI\n'
                                   'SJTWPgm/PDXx/Pk74LAzBvy2mnMXEYnS3p+CqzfDPicGzw9cEEzV/C0/t9ApuYuI5IoZTP41fP2F\n'
                                   'RNsNe8ObL6T+mpAouYuI5NrONcHa+BOuDp7/tjHnH1mR808QEZHAv1wW/MoDjdxFREqQkruISAlS\n'
                                   'chcRyaN+n2nTR5pzFxHJk7DOtMmGRu4iInkS1pk22VByFxHJk7DOtMmGpmVERPKkdtwI5k+tC+VM\n'
                                   'm0wyJnczmwf8G7DR3Q9K8roBtwCTgA+Ar7p7dEehiYgUsNpxI3Ka1OOymZa5BzgpzesnA/vEfk0D\n'
                                   '7hh4WCIiMhAZk7u7LwHeTdPlc8DPPdAADDez0WEFKCIifRdGQXUM8HqX5w2xNhERiUheV8uY2TQz\n'
                                   'azSzxtbW/Bx7KSJSjsJI7m8Ae3R53j3W1ou7z3H3Ce4+oaoqdxfIioiUuzCS+4PAWRaoA9rd/a0Q\n'
                                   '3ldERPop4zV7ZrYAOB4YBbwNXA0MAXD3n8aWQt5GsKLmA2CKu2e8P8/MWoGWgQSfI6OAd6IOoh+K\n'
                                   'MW7FnD/FGHcxxgy5j3ucu2ec+ojsDtVCZWaN2dxPWGiKMW7FnD/FGHcxxgyFE7eOHxARKUFK7iIi\n'
                                   'JUjJvbc5UQfQT8UYt2LOn2KMuxhjhgKJW3PuIiIlSCN3EZESVLbJ3cxOMrOXzWytmX0zRZ/TzWy1\n'
                                   'ma0ys3vzHWOSeNLGbGZjzWyxmb1gZsvNbFIUcfaIaZ6ZbTSzlSleNzO7Nfb/tNzMjsh3jMlkEffk\n'
                                   'WLwrzGypmR2a7xiTxJQ25i79Pm5mHWZ2Wr5iSxNLxpjN7HgzWxb7e/h0PuNLJYvvj0oz+72ZvRiL\n'
                                   'e0q+Y8Tdy+4XMBh4FagBhgIvAgf06LMP8AIwIva8SxHEPAe4IPb7A4D1BfBn/UngCGBlitcnAY8A\n'
                                   'BtQBf4k65izjPqbL98bJhRB3ppi7fB/9AXgYOK3QYwaGA6uBsbHnSP8e9iHubwPXx35fRXD44tB8\n'
                                   'xliuI/cjgbXu3uzuW4H7CE637OpcYLa7twG4+8Y8x9hTNjE7sFPs95XAm3mMLykv0lNFM8Xt7kvj\n'
                                   '3xtAA8GxG5HK4s8a4GLgfiDq72cgq5jPABa6+2ux/sUStwPDYps8d4z17chHbHHlmtyzOclyX2Bf\n'
                                   'M/uzmTWYWboz7fMhm5jrgS+b2QaCkdnF+QltQErhVNFzCP71UdDMbAxwCsV158K+wAgz+28zazKz\n'
                                   's6IOKEu3AfsTDLBWANPdvTOfAeiavdQqCKZmjicYlS0xs4PdfXOkUaX3JeAed7/RzI4GfmFmB+X7\n'
                                   'm6qcmNlEguR+bNSxZOFmYKa7dwYDyqJQAdQCJwA7AM+YWYO7vxJtWBmdCCwD/hXYC3jCzP7o7u/l\n'
                                   'K4ByTe7ZnGS5gWAedRuwzsxeIUj2z+UnxF6yifkcYrdmufszZvYRgnMuCuKfsilkfapooTGzQ4C5\n'
                                   'wMnunrtr7MMzAbgvlthHAZPMrMPdH4g2rLQ2AJvc/X3gfTNbAhwKFHpynwJc58Gk+1ozWwfsBzyb\n'
                                   'rwDKdVrmOWAfM9vTzIYC/0lwumVXDxCM2jGzUQT/PGzOZ5A9ZBPzawQjHMxsf+AjQKEfnF+Up4qa\n'
                                   '2VhgIXBmEYwiAXD3Pd292t2rgd8AXyvwxA7wO+BYM6sws48CRwFrIo4pG13/Lu4KjCfP+aMsR+7u\n'
                                   '3mFmFwGPEawemOfuq8zse0Cjuz8Ye+3TZrYa+BC4IsrRWZYxzwDuNLNLCQo6X42NHCLT9VTRWC2g\n'
                                   '26miBLWBScBaYqeKRhNpd1nE/V1gJHB7bCTc4REfFpVFzAUnU8zuvsbMHgWWA53AXHdPu9QzH7L4\n'
                                   's74GuMfMVhCsBJvp7nk94VI7VEVESlC5TsuIiJQ0JXcRkRKk5C4iUoKU3EVESpCSu4hICVJyFxEp\n'
                                   'QUruIiIlSMldRKQE/R97YMArOZqkbAAAAABJRU5ErkJggg==\n',
                      'text/plain': '<matplotlib.figure.Figure at '
                                    '0x113abe908>'},
             'metadata': {},
             'transient': {}},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 106700, tzinfo=tzutc()),
            'msg_id': '870ff042-bdb5df966933d3de7869d86b',
            'msg_type': 'display_data',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '870ff042-bdb5df966933d3de7869d86b',
 'msg_type': 'display_data',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 956349, tzinfo=tzutc()),
                   'msg_id': '34283ab6-74981fba280d383bc55a6c55',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'execution_state': 'idle'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 109547, tzinfo=tzutc()),
            'msg_id': 'a75b0f61-399ce8cd1614bd0290033b3e',
            'msg_type': 'status',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': 'a75b0f61-399ce8cd1614bd0290033b3e',
 'msg_type': 'status',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 8, 956349, tzinfo=tzutc()),
                   'msg_id': '34283ab6-74981fba280d383bc55a6c55',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
____________________________________ cell 5 ____________________________________
Notebook cell execution failed
Cell 5: Cell outputs differ

Input:
## Run a regression model
x = sm.add_constant(x, prepend=True)
results = smf.OLS(y_log,x).fit()
print(results.summary())

Traceback: mismatch 'stdout'
<<<<<<<<<<<< Reference output from ipynb file:
                            OLS Regression Results                            
==============================================================================
Dep. Variable:              Log_Sales   R-squared:                       0.989
Model:                            OLS   Adj. R-squared:                  0.988
Method:                 Least Squares   F-statistic:                     1604.
Date:                Thu, 28 Dec 2017   Prob (F-statistic):           4.75e-19
Time:                        23:57:05   Log-Likelihood:                 35.802
No. Observations:                  20   AIC:                            -67.60
Df Residuals:                      18   BIC:                            -65.61
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const          2.6846      0.027     99.293      0.000       2.628       2.741
Price         -0.8738      0.022    -40.053      0.000      -0.920      -0.828
==============================================================================
Omnibus:                        0.433   Durbin-Watson:                   2.039
Prob(Omnibus):                  0.805   Jarque-Bera (JB):                0.536
Skew:                           0.047   Prob(JB):                        0.765
Kurtosis:                       2.203   Cond. No.                         5.63
==============================================================================

Warnings:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.

============ disagrees with newly computed (test) output:
                            OLS Regression Results                            
==============================================================================
Dep. Variable:              Log_Sales   R-squared:                       0.989
Model:                            OLS   Adj. R-squared:                  0.988
Method:                 Least Squares   F-statistic:                     1604.
Date:                Fri, 29 Dec 2017   Prob (F-statistic):           4.75e-19
Time:                        00:30:09   Log-Likelihood:                 35.802
No. Observations:                  20   AIC:                            -67.60
Df Residuals:                      18   BIC:                            -65.61
Df Model:                           1                                         
Covariance Type:            nonrobust                                         
==============================================================================
                 coef    std err          t      P>|t|      [0.025      0.975]
------------------------------------------------------------------------------
const          2.6846      0.027     99.293      0.000       2.628       2.741
Price         -0.8738      0.022    -40.053      0.000      -0.920      -0.828
==============================================================================
Omnibus:                        0.433   Durbin-Watson:                   2.039
Prob(Omnibus):                  0.805   Jarque-Bera (JB):                0.536
Skew:                           0.047   Prob(JB):                        0.765
Kurtosis:                       2.203   Cond. No.                         5.63
==============================================================================

Warnings:
[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.

>>>>>>>>>>>>
------------------------------ Captured log call -------------------------------
kernel.py                  144 DEBUG    Executing cell: "## Run a regression model"...
kernel.py                  131 DEBUG    Kernel message (shell):
{'buffers': [],
 'content': {'execution_count': 6,
             'payload': [],
             'status': 'ok',
             'user_expressions': {}},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 130542, tzinfo=tzutc()),
            'msg_id': 'bf1f4b53-711fadb2bab18ac9a6f09ced',
            'msg_type': 'execute_reply',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {'dependencies_met': True,
              'engine': 'e26a1eb4-3d01-4949-90dd-fb7028963376',
              'started': '2017-12-29T08:30:09.117215Z',
              'status': 'ok'},
 'msg_id': 'bf1f4b53-711fadb2bab18ac9a6f09ced',
 'msg_type': 'execute_reply',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 116270, tzinfo=tzutc()),
                   'msg_id': 'd9b44c5e-dbb3cf96f047cc0358f9c179',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'execution_state': 'busy'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 117041, tzinfo=tzutc()),
            'msg_id': 'c1481e9c-8df1348561783f4b476c842f',
            'msg_type': 'status',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': 'c1481e9c-8df1348561783f4b476c842f',
 'msg_type': 'status',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 116270, tzinfo=tzutc()),
                   'msg_id': 'd9b44c5e-dbb3cf96f047cc0358f9c179',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'code': '## Run a regression model\n'
                     'x = sm.add_constant(x, prepend=True)\n'
                     'results = smf.OLS(y_log,x).fit()\n'
                     'print(results.summary())',
             'execution_count': 6},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 117391, tzinfo=tzutc()),
            'msg_id': '367cf3ea-e5998159bd1e2db32539138a',
            'msg_type': 'execute_input',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': '367cf3ea-e5998159bd1e2db32539138a',
 'msg_type': 'execute_input',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 116270, tzinfo=tzutc()),
                   'msg_id': 'd9b44c5e-dbb3cf96f047cc0358f9c179',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'name': 'stdout',
             'text': '                            OLS Regression '
                     'Results                            \n'
                     '==============================================================================\n'
                     'Dep. Variable:              Log_Sales   '
                     'R-squared:                       0.989\n'
                     'Model:                            OLS   Adj. '
                     'R-squared:                  0.988\n'
                     'Method:                 Least Squares   '
                     'F-statistic:                     1604.\n'
                     'Date:                Fri, 29 Dec 2017   Prob '
                     '(F-statistic):           4.75e-19\n'
                     'Time:                        00:30:09   '
                     'Log-Likelihood:                 35.802\n'
                     'No. Observations:                  20   '
                     'AIC:                            -67.60\n'
                     'Df Residuals:                      18   '
                     'BIC:                            -65.61\n'
                     'Df Model:                           '
                     '1                                         \n'
                     'Covariance Type:            '
                     'nonrobust                                         \n'
                     '==============================================================================\n'
                     '                 coef    std err          t      '
                     'P>|t|      [0.025      0.975]\n'
                     '------------------------------------------------------------------------------\n'
                     'const          2.6846      0.027     99.293      '
                     '0.000       2.628       2.741\n'
                     'Price         -0.8738      0.022    -40.053      '
                     '0.000      -0.920      -0.828\n'
                     '==============================================================================\n'
                     'Omnibus:                        0.433   '
                     'Durbin-Watson:                   2.039\n'
                     'Prob(Omnibus):                  0.805   Jarque-Bera '
                     '(JB):                0.536\n'
                     'Skew:                           0.047   '
                     'Prob(JB):                        0.765\n'
                     'Kurtosis:                       2.203   Cond. '
                     'No.                         5.63\n'
                     '==============================================================================\n'
                     '\n'
                     'Warnings:\n'
                     '[1] Standard Errors assume that the covariance matrix of '
                     'the errors is correctly specified.\n'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 129230, tzinfo=tzutc()),
            'msg_id': 'a72bb177-00e3393acb10dff5ea263624',
            'msg_type': 'stream',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': 'a72bb177-00e3393acb10dff5ea263624',
 'msg_type': 'stream',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 116270, tzinfo=tzutc()),
                   'msg_id': 'd9b44c5e-dbb3cf96f047cc0358f9c179',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
kernel.py                  131 DEBUG    Kernel message (iopub):
{'buffers': [],
 'content': {'execution_state': 'idle'},
 'header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 131505, tzinfo=tzutc()),
            'msg_id': 'fff4be3b-8df4259ce2fe7d62eee07185',
            'msg_type': 'status',
            'session': 'f9e36c51-4546572af47306cc9324f2d5',
            'username': 'danehamlett',
            'version': '5.2'},
 'metadata': {},
 'msg_id': 'fff4be3b-8df4259ce2fe7d62eee07185',
 'msg_type': 'status',
 'parent_header': {'date': datetime.datetime(2017, 12, 29, 8, 30, 9, 116270, tzinfo=tzutc()),
                   'msg_id': 'd9b44c5e-dbb3cf96f047cc0358f9c179',
                   'msg_type': 'execute_request',
                   'session': 'ceb6ac30-414b94d8fc7a761cba2f44a6',
                   'username': 'danehamlett',
                   'version': '5.2'}}
---------------------------- Captured log teardown -----------------------------
kernel.py                  205 DEBUG    Stopping kernel
=============================== warnings summary ===============================
Desktop/School/Machine_Learning/Machine_Learning_Pre_Assessment_Quiz.ipynb::Cell 0
  /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/jupyter_client/connect.py:157: RuntimeWarning: Failed to set sticky bit on '/var/folders/0g/th8tzqq50vz7_44cl92_5g8h0000gn/T': [Errno 1] Operation not permitted: '/var/folders/0g/th8tzqq50vz7_44cl92_5g8h0000gn/T'
    RuntimeWarning,

-- Docs: http://doc.pytest.org/en/latest/warnings.html
================ 3 failed, 3 passed, 1 warnings in 3.08 seconds ================
Danes-MacBook-Pro:~ danehamlett$ 
